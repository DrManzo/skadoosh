<!DOCTYPE HTML>
<html>
<head>
    <title>Skadoosh Agent Portal</title>
    <script type="text/javascript" src="//code.jquery.com/jquery-1.4.2.min.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js"></script>
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function(){
            // namespace = '/skadoosh_agent_portal'; // change to an empty string to use the global namespace
            namespace = '/';

            // the socket.io documentation recommends sending an explicit package upon connection
            // this is specially important when using the global namespace
            var socket = io.connect('http://' + document.domain + ':' + location.port + namespace);

            // event handler for server sent data
            // the data is displayed in the "Received" section of the page
            socket.on('general_response', function(msg) {
                $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());
            });

            // event handler for new connections
            socket.on('connect', function() {
                socket.emit('my event', {data: 'I\'m connected!'});
            });

            // handlers for the different forms in the page
            // these send data to the server in a variety of ways
            $('form#emit').submit(function(event) {
                socket.emit('agent_answer', {data: $('#emit_data').val()});
                return false;
            });
            
            $('form#close').submit(function(event) {
                socket.emit('close room', {room: $('#close_room').val()});
                return false;
            });
            
            $('form#disconnect').submit(function(event) {
                socket.emit('disconnect request');
                return false;
            });
        });
    </script>
</head>
<body>
    <h1>Agent Portal Help</h1>
    <p>Continuous training the bot</p>
    <p>Questions unanswered by the bot will be routed here in realtime, the agent has to reply 
      that question, the replay answer will be self trained by the bot, so bot can auto answer
      on similar questions</p>  
    <form id="disconnect" method="POST" action="#">
        <input type="submit" value="Disconnect">
    </form>
    
    <h2>Send:</h2>
    <form id="emit" method="POST" action='#'>
        <input type="text" name="emit_data" size="255" id="emit_data" placeholder="Message">
        <input type="submit" value="Echo">
    </form>
    <h2>Receive:</h2>
    <div id="log"></div>
</body>
</html>
